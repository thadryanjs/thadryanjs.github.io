---
author: Thadryan
title: A Case study in Silent Data Corruption in an RNA-Seq Experiment
date: 2020-04-27
description: "How a subtle bug and misleading error message can transform your RNA-Seq data."
categories:
 - R
 - Bioinformatics
 - Statistics
 - Differential Expression
 - Tools
---
During a recent differential gene expression analysis I had a few issues converge in such a way that the code would run fine from top to bottom but would silently compromise the analysis and produce bogus results. Essentially it was a combination of a bugged error message in a package I was using, a bad row in an input file I was given, and some weird behavior of R (and of course, my initial carelessness in not noticing sooner). I caught this issues with some included QC functions.

It seemed plausible that these issues could join forces to trip people up now and then, so I figured I would document it in case people wanted to keep an eye out for it.

If you're not interested in this sort of analysis but use R, there is still a short takeaway summarized here:

```{r}
(x <- c("1", "10", "100"))
```

```{r}
(x <- as.factor(x))
```

```{r}
(x <- as.integer(x))
```

Whoops! Those numbers have been totally changed.

The repo for the analysis [here](https://github.com/sweeney-th/type-issue-case-study), and the PDF is below:

<a class="s_pdf_download_link" href="http://pythoninthewyld.com/wp-content/uploads/2020/04/CaseStudy.pdf" download><button style="" class="s_pdf_download_bttn">Download</button></a>

> NOTE: It appears more recent versions of DESeq2 don't do this!

> NOTE: Edited for clarity, 2022-12-13